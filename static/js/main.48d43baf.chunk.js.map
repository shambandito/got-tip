{"version":3,"sources":["components/Home/Home.module.css","components/Results/UserResults/UserResults.module.css","components/Results/Statistics/Statistics.module.css","components/CharacterContainer/CharacterContainer.module.css","firebase.js","components/SubmitContainer/SubmitContainer.jsx","components/BonusContainer/BonusContainer.jsx","components/CharacterContainer/CharacterContainer.jsx","components/Home/Home.jsx","components/Results/UserResults/UserResults.jsx","components/Results/Ranking/Ranking.jsx","components/Results/Statistics/Statistics.jsx","components/Results/Results.jsx","routing/Router.jsx","App.jsx","serviceWorker.js","index.js","components/Results/Results.module.css","components/Results/Ranking/Ranking.module.css","components/SubmitContainer/SubmitContainer.module.css","components/BonusContainer/BonusContainer.module.css"],"names":["module","exports","resultsButton","toastMessage","userName","characters","character","characterImage","characterContent","left","characterName","userAnswer","characterStatus","correct","wrong","results","points","totalWrap","totalPoints","bonusItems","bonusItem","deadPercent","container","title","content","inputLabel","block","radioGroup","input","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","React","memo","_ref","onSubmit","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","buttonDisabled","setButtonDisabled","react_default","a","createElement","className","styles","index_es","variant","gutterBottom","elevation","placeholder","onChange","event","target","value","button","color","disabled","onClick","window","setTimeout","items","map","index","key","question","radio","row","concat","answer","control","label","onRadioChange","onCheckboxChange","component","src","Answers","image","alt","dies","checked","whiteWalker","PureComponent","bonus","answers","correctAnswers","reduce","result","_classNames","_classNames2","userSaysDead","userSaysWhiteWalker","realAnswer","answerCorrect","characterClasses","classNames","defineProperty","alive","dead","statusClasses","characterText","Fragment","_classNames3","users","userPoints","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","user","pointsTotal","push","objectSpread","err","return","sort","b","position","samePointsCount","deadTips","filter","length","usersCount","Math","floor","Results","state","selectedTab","selectedUserId","loading","handleTabSwitch","_this","setState","handleUserChange","_this2","this","database","ref","on","snapshot","val","newUsers","itemKey","id","props","history","_this$state","selectedUser","find","classes","tabs","resultsContainer","selectWrap","htmlFor","Results_UserResults_UserResults","Results_Ranking_Ranking","Results_Statistics_Statistics","AppRouter","react_router_dom","react_router","path","exact","App","Router","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","backButton","colorRotate","winner"],"mappings":"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","file":"static/js/main.48d43baf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsButton\":\"Home_resultsButton__2rlk8\",\"toastMessage\":\"Home_toastMessage__3c7eQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userName\":\"UserResults_userName__1KsTo\",\"characters\":\"UserResults_characters__2Ki_Y\",\"character\":\"UserResults_character__3Pw15\",\"characterImage\":\"UserResults_characterImage__42T7X\",\"characterContent\":\"UserResults_characterContent__2cJNy\",\"left\":\"UserResults_left__FuyqM\",\"characterName\":\"UserResults_characterName__1VeuC\",\"userAnswer\":\"UserResults_userAnswer__si-Jr\",\"characterStatus\":\"UserResults_characterStatus__1yq8I\",\"correct\":\"UserResults_correct__vBjUh\",\"wrong\":\"UserResults_wrong__1WJws\",\"results\":\"UserResults_results__K4PZM\",\"points\":\"UserResults_points__2mD3D\",\"totalWrap\":\"UserResults_totalWrap__36NXZ\",\"totalPoints\":\"UserResults_totalPoints__3QAfO\",\"bonusItems\":\"UserResults_bonusItems__iSYgI\",\"bonusItem\":\"UserResults_bonusItem__3tgGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characters\":\"Statistics_characters__3dcfJ\",\"character\":\"Statistics_character__PVJs_\",\"characterImage\":\"Statistics_characterImage__2fXPi\",\"characterContent\":\"Statistics_characterContent__VhYbT\",\"left\":\"Statistics_left__2EFV2\",\"deadPercent\":\"Statistics_deadPercent__2xHJ9\",\"characterName\":\"Statistics_characterName__1xMSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CharacterContainer_container__16e4A\",\"title\":\"CharacterContainer_title__3HxzE\",\"characters\":\"CharacterContainer_characters__78RdB\",\"character\":\"CharacterContainer_character__3kS_-\",\"characterImage\":\"CharacterContainer_characterImage__1L8r2\",\"content\":\"CharacterContainer_content__1matm\",\"inputLabel\":\"CharacterContainer_inputLabel__27cqz\",\"block\":\"CharacterContainer_block__6z7Ee\",\"radioGroup\":\"CharacterContainer_radioGroup__YVXrl\",\"input\":\"CharacterContainer_input__16H9e\"};","import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBTwiQsaaXD6gKmAnLADdcony3qjTbAtXE\",\r\n  authDomain: \"got-tip.firebaseapp.com\",\r\n  databaseURL: \"https://got-tip.firebaseio.com\",\r\n  projectId: \"got-tip\",\r\n  storageBucket: \"got-tip.appspot.com\",\r\n  messagingSenderId: \"476735537271\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React, { useState } from 'react';\r\n\r\nimport styles from './SubmitContainer.module.css';\r\nimport { Input, Button, Typography, Paper } from '@material-ui/core';\r\n\r\nconst SubmitContainer = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [ buttonDisabled, setButtonDisabled ] = useState(false);\r\n\r\n  function handleSubmit() {\r\n    onSubmit(name);\r\n\r\n    setButtonDisabled(true);\r\n\r\n    window.setTimeout(() => {\r\n      setButtonDisabled(false);\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h4\" gutterBottom>Antworten einreichen</Typography>\r\n      <Paper className={styles.block} elevation={1}>\r\n        <Typography className={styles.inputLabel} variant=\"h6\" gutterBottom>Dein Name</Typography>\r\n        <Input\r\n          className={styles.input}\r\n          placeholder=\"Name eingeben\"\r\n          onChange={(event) => { setName(event.target.value) }}\r\n        />\r\n        <Button\r\n          className={styles.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={buttonDisabled || !name}\r\n          onClick={handleSubmit}\r\n        >\r\n          Einreichen\r\n    </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SubmitContainer);","import React from 'react';\r\n\r\nimport styles from './BonusContainer.module.css';\r\nimport { Input, RadioGroup, FormControlLabel, Radio, Typography, Paper } from '@material-ui/core';\r\n\r\nconst BonusContainer = ({ items, onChange }) => {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h4\" gutterBottom>Bonus Fragen</Typography>\r\n      {items.map((bonusItem, index) => {\r\n        return (\r\n          <Paper key={bonusItem.question} className={styles.block} elevation={1}>\r\n            <Typography className={styles.inputLabel} variant=\"h6\" gutterBottom>\r\n              {bonusItem.question} ({bonusItem.points} Extrapunkt{bonusItem.points > 1 && 'e'})\r\n            </Typography>\r\n            {bonusItem.radio ? (\r\n              <RadioGroup\r\n                className={styles.radioGroup}\r\n                row={true}\r\n                name={`${bonusItem.question}-radios`}\r\n                value={bonusItem.answer}\r\n                onChange={(event) => { onChange(index, event.target.value) }}\r\n              >\r\n                <FormControlLabel value={'yes'} control={<Radio />} label=\"Ja\" />\r\n                <FormControlLabel value={'no'} control={<Radio />} label=\"Nein\" />\r\n              </RadioGroup>\r\n            ) : (\r\n                <Input\r\n                  className={styles.input}\r\n                  name={`${bonusItem.question}-input`}\r\n                  placeholder=\"Antwort eingeben\"\r\n                  value={bonusItem.answer}\r\n                  onChange={(event) => { onChange(index, event.target.value) }}\r\n                />\r\n              )}\r\n          </Paper>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(BonusContainer);","import React from 'react';\r\n\r\nimport Answers from '../../data/Answers.json';\r\n\r\nimport styles from './CharacterContainer.module.css';\r\nimport { Paper, Typography, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@material-ui/core';\r\n\r\nconst CharacterContainer = ({ items, onRadioChange, onCheckboxChange }) => {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h4\" gutterBottom>Charaktere</Typography>\r\n      <ul className={styles.characters}>\r\n        {items.map((character, index) => {\r\n          return (\r\n            <Paper key={character.name} component={'li'} className={styles.character} elevation={1}>\r\n              <img className={styles.characterImage} src={Answers.characters[index].image} alt={character.name} />\r\n              <div className={styles.content}>\r\n                <Typography className={styles.inputLabel} variant=\"h6\" >{character.name}</Typography>\r\n                <FormGroup row>\r\n                  <RadioGroup\r\n                    className={styles.radioGroup}\r\n                    row={true}\r\n                    name={`${character.name}-radios`}\r\n                    value={character.dies}\r\n                    onChange={(event) => { onRadioChange(character.name, event.target.value) }}\r\n                  >\r\n                    <FormControlLabel value={'no'} control={<Radio />} label=\"Überlebt\" />\r\n                    <FormControlLabel value={'yes'} control={<Radio />} label=\"Stirbt\" />\r\n                  </RadioGroup>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={character.whiteWalker}\r\n                        onChange={(event) => { onCheckboxChange(character.name, event.target.checked) }}\r\n                        disabled={character.dies !== 'yes'}\r\n                      />\r\n                    }\r\n                    label=\"Kehrt als White Walker zurück\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CharacterContainer);","import React from 'react';\r\n\r\nimport styles from './Home.module.css';\r\n\r\nimport Data from '../../data/Data.json';\r\nimport firebase from '../../firebase';\r\n\r\nimport SubmitContainer from '../SubmitContainer/SubmitContainer';\r\nimport BonusContainer from '../BonusContainer/BonusContainer';\r\nimport CharacterContainer from '../CharacterContainer/CharacterContainer';\r\nimport { Button, Snackbar } from '@material-ui/core';\r\n\r\nclass Home extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      characters: [...Data.characters],\r\n      bonus: [...Data.bonus],\r\n      showToast: false\r\n    };\r\n\r\n    this.handleResultsClick = this.handleResultsClick.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleRadioChange = this.handleRadioChange.bind(this);\r\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    this.handleBonusChange = this.handleBonusChange.bind(this);\r\n\r\n    this.handleToastClose = this.handleToastClose.bind(this);\r\n  }\r\n\r\n  handleResultsClick() {\r\n    const { history } = this.props;\r\n\r\n    history.push('/results');\r\n  }\r\n\r\n  handleRadioChange(name, dies) {\r\n    const { characters } = this.state;\r\n\r\n    const updatedCharacters = characters.map(character => {\r\n      if (character.name === name) {\r\n        return {\r\n          ...character,\r\n          dies: dies,\r\n          whiteWalker: false\r\n        }\r\n      }\r\n\r\n      return character;\r\n    });\r\n\r\n    this.setState({\r\n      characters: updatedCharacters\r\n    });\r\n  }\r\n\r\n  handleBonusChange(index, value) {\r\n    const { bonus } = this.state;\r\n\r\n    const updatedBonus = [...bonus];\r\n\r\n    updatedBonus[index].answer = value;\r\n\r\n    this.setState({\r\n      bonus: updatedBonus\r\n    });\r\n  }\r\n\r\n  handleCheckboxChange(name, checked) {\r\n    const { characters } = this.state;\r\n\r\n    const updatedCharacters = characters.map(character => {\r\n      if (character.name === name) {\r\n        return {\r\n          ...character,\r\n          whiteWalker: checked\r\n        }\r\n      }\r\n\r\n      return character;\r\n    });\r\n\r\n    this.setState({\r\n      characters: updatedCharacters\r\n    });\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(name) {\r\n    const { characters, bonus } = this.state;\r\n\r\n    console.log({\r\n      name: name,\r\n      characters: characters,\r\n      bonus: bonus\r\n    });\r\n\r\n    const itemsRef = firebase.database().ref('users');\r\n\r\n    const user = {\r\n      name: name,\r\n      characters: characters,\r\n      bonus: bonus\r\n    }\r\n\r\n    itemsRef.push(user, (error) => {\r\n      if(!error) {\r\n        this.setState({\r\n          showToast: true\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleToastClose() {\r\n    this.setState({\r\n      showToast: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { characters, bonus, showToast } = this.state;\r\n\r\n    return (\r\n      <div className={styles.home}>\r\n        <Button className={styles.resultsButton} onClick={this.handleResultsClick} variant=\"contained\" size=\"large\" color=\"primary\">Ergebnisse</Button>\r\n\r\n        <CharacterContainer\r\n          items={characters}\r\n          onRadioChange={this.handleRadioChange}\r\n          onCheckboxChange={this.handleCheckboxChange}\r\n        />\r\n\r\n        <BonusContainer\r\n          items={bonus}\r\n          onChange={this.handleBonusChange}\r\n        />\r\n\r\n        <SubmitContainer\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={showToast}\r\n          variant=\"success\"\r\n          autoHideDuration={5000}\r\n          onClose={this.handleToastClose}\r\n          message={<span className={styles.toastMessage}>Deine Ergebnisse wurden gespeichert.</span>}\r\n          action={[\r\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleToastClose}>\r\n              OK\r\n            </Button>\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './UserResults.module.css';\r\n\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\nconst UserResults = ({ name, characters, bonus, answers }) => {\r\n  let correctAnswers = bonus.reduce((result, question) => {\r\n    return question.correct ? result + question.points : result;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className={styles.results}>\r\n      <Typography variant=\"h5\" gutterBottom>Tipps von <span className={styles.userName}>{name}</span></Typography>\r\n\r\n      <ul className={styles.characters}>\r\n        {characters.map((character, index) => {\r\n          const userSaysDead = character.dies === 'yes';\r\n          const userSaysWhiteWalker = character.whiteWalker;\r\n          const realAnswer = answers.characters[index].dies;\r\n          let answerCorrect = character.dies === realAnswer;\r\n\r\n          const characterClasses = classNames({\r\n            [styles.character]: true,\r\n            [styles.alive]: !userSaysDead,\r\n            [styles.dead]: userSaysDead\r\n          });\r\n\r\n          const statusClasses = classNames({\r\n            [styles.characterStatus]: true,\r\n            [styles.correct]: answerCorrect,\r\n            [styles.wrong]: !answerCorrect\r\n          });\r\n\r\n          let characterText = 'überlebt';\r\n\r\n          if (userSaysDead) {\r\n            characterText = 'stirbt';\r\n          }\r\n\r\n          let points = '0'\r\n\r\n          if (answerCorrect) {\r\n            points = '+ 1';\r\n            correctAnswers += 1;\r\n          } else {\r\n            points = '- 1'\r\n            correctAnswers -= 1;\r\n          }\r\n\r\n          return (\r\n            <Paper key={character.name} component={'li'} className={characterClasses} elevation={1}>\r\n              <img className={styles.characterImage} src={answers.characters[index].image} alt={character.name} />\r\n              <div className={styles.characterContent}>\r\n                <div className={styles.left}>\r\n                  <Typography className={styles.characterName} variant=\"h6\">\r\n                    {character.name}\r\n                    <span className={styles.userAnswer}> {characterText}</span>\r\n                    {userSaysWhiteWalker && (\r\n                      <>\r\n                        <span> und wird</span>\r\n                        <span className={styles.userAnswer}> White Walker</span>\r\n                      </>\r\n                    )}\r\n                  </Typography>\r\n                  <Typography className={statusClasses} variant=\"overline\">\r\n                    {realAnswer === 'yes' ? 'Tot' : 'Überlebt'}\r\n                  </Typography>\r\n                </div>\r\n\r\n                <div className={styles.points}>\r\n                  <Typography className={statusClasses} variant=\"button\">\r\n                    {points}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <Typography variant=\"h5\" gutterBottom>Bonus Fragen</Typography>\r\n\r\n      <ul className={styles.bonusItems}>\r\n        {bonus.map(bonusItem => {\r\n          const statusClasses = classNames({\r\n            [styles.characterStatus]: true,\r\n            [styles.correct]: bonusItem.correct\r\n          });\r\n\r\n          return (\r\n            <Paper key={bonusItem.question} component={'li'} className={styles.bonusItem} elevation={1}>\r\n              <div className={styles.left}>\r\n                <Typography className={styles.characterName} variant=\"h6\">\r\n                  {bonusItem.question} ({bonusItem.points} Extrapunkt{bonusItem.points > 1 && 'e'})\r\n                </Typography>\r\n                {bonusItem.radio ? (\r\n                  <Typography variant=\"h6\">\r\n                    <span className={styles.userAnswer}>{bonusItem.answer === 'yes' ? 'Ja' : 'Nein'}</span>\r\n                  </Typography>\r\n                ) : (\r\n                    <Typography className={styles.characterName} variant=\"h6\">\r\n                      <span className={styles.userAnswer}>{bonusItem.answer}</span>\r\n                    </Typography>\r\n                  )}\r\n              </div>\r\n\r\n              <div className={styles.points}>\r\n                  <Typography className={statusClasses} variant=\"button\">\r\n                    {bonusItem.correct ? `+ ${bonusItem.points}` : '0'}\r\n                  </Typography>\r\n                </div>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <div className={styles.totalWrap}>\r\n        <Typography className={styles.totalPoints} variant=\"h5\">{correctAnswers} Punkte</Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(UserResults);","import React from 'react';\r\n\r\nimport styles from './Ranking.module.css';\r\nimport { Typography, Paper } from '@material-ui/core';\r\n\r\nconst Ranking = ({ users, answers }) => {\r\n\r\n  const userPoints = [];\r\n\r\n  for (let user of users) {\r\n    let pointsTotal = user.characters.reduce((result, character, index) => {\r\n      const userSaysDead = character.dies === 'yes';\r\n      //const userSaysWhiteWalker = character.whiteWalker;\r\n      const realAnswer = answers.characters[index].dies;\r\n\r\n      let answerCorrect = character.dies === realAnswer || (!userSaysDead && !realAnswer);\r\n\r\n      return answerCorrect ? result + 1 : result - 1;\r\n    }, 0);\r\n\r\n    pointsTotal = pointsTotal + user.bonus.reduce((result, question) => {\r\n      return question.correct ? result + question.points : result;\r\n    }, 0);\r\n\r\n    userPoints.push({\r\n      ...user,\r\n      points: pointsTotal\r\n    });\r\n  }\r\n\r\n  userPoints.sort((a, b) => {\r\n    return b.points - a.points;\r\n  });\r\n\r\n  let position = 0;\r\n  let samePointsCount = 1;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h5\" gutterBottom>Finaler Stand</Typography>\r\n      <ul className={styles.users}>\r\n        {userPoints.map((user, index) => {\r\n\r\n          if (index > 0 && userPoints[index - 1].points === user.points) {\r\n            samePointsCount++;\r\n          }\r\n\r\n          if (index === 0 || (index > 0 && userPoints[index - 1].points > user.points)) {\r\n            if (samePointsCount > 1) {\r\n              position = position + samePointsCount;\r\n              samePointsCount = 1;\r\n            } else {\r\n              position++;\r\n            }\r\n          }\r\n\r\n          return (\r\n            <Paper key={index} className={styles.user} component={'li'} elevation={1}>\r\n              <Typography className={styles.position} variant=\"h6\">{(index === 0 || index > 0 && userPoints[index - 1].points !== user.points) && `${position}.`}</Typography>\r\n              {index === 0 && (\r\n                <img src={'https://i.pinimg.com/originals/34/df/e6/34dfe675aeb3fa6f30b83c7cf35cd7d9.png'} alt={'Sieger'} />\r\n              )}\r\n              <Typography className={styles.name} variant=\"h6\">\r\n                {user.name}\r\n              </Typography>\r\n\r\n              <Typography variant=\"button\">\r\n                <span className={styles.points}>{user.points} Punkt{user.points !== 1 && 'e'}</span>\r\n              </Typography>\r\n            </Paper>\r\n\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Ranking);","import React from 'react';\r\n\r\nimport styles from './Statistics.module.css';\r\nimport { Typography, Paper } from '@material-ui/core';\r\n\r\nconst Statistics = ({ users, answers }) => {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h5\" gutterBottom>Charakter Statistiken</Typography>\r\n      <ul className={styles.characters}>\r\n        {answers.characters.map((character, index) => {\r\n\r\n          const deadTips = users.filter((user) => user.characters[index].dies === 'yes').length;\r\n          const usersCount = users.length;\r\n\r\n          const deadPercent = Math.floor((deadTips / usersCount) * 100);\r\n\r\n          return (\r\n            <Paper key={character.name} component={'li'} className={styles.character} elevation={1}>\r\n              <img className={styles.characterImage} src={character.image} alt={character.name} />\r\n              <div className={styles.characterContent}>\r\n                <span className={styles.deadPercent}>{deadPercent}% </span>\r\n                <Typography className={styles.characterName} variant=\"h6\">\r\n                  glauben, dass\r\n                  <span className={styles.characterName}> {character.name} </span>\r\n                  stirbt.\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Statistics);","import React from 'react';\r\n\r\nimport firebase from '../../firebase';\r\n\r\nimport styles from './Results.module.css';\r\n\r\nimport Answers from '../../data/Answers.json';\r\nimport { Button, Tabs, Tab, FormControl, InputLabel, Select, MenuItem, CircularProgress } from '@material-ui/core';\r\nimport classes from './Results.module.css';\r\nimport UserResults from './UserResults/UserResults';\r\nimport Ranking from './Ranking/Ranking';\r\nimport Statistics from './Statistics/Statistics';\r\n\r\nclass Results extends React.PureComponent {\r\n\r\n  state = {\r\n    selectedTab: 0,\r\n    selectedUserId: null,\r\n    users: [],\r\n    loading: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    const users = firebase.database().ref('users');\r\n\r\n    users.on('value', (snapshot) => {\r\n      let items = snapshot.val();\r\n      let newUsers = [];\r\n\r\n      for (let itemKey in items) {\r\n        newUsers.push({\r\n          id: itemKey,\r\n          ...items[itemKey]\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        users: newUsers,\r\n        selectedUserId: newUsers[0].id,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  handleTabSwitch = (event, value) => {\r\n    this.setState({\r\n      selectedTab: value\r\n    });\r\n  }\r\n\r\n  handleUserChange = (event) => {\r\n    this.setState({\r\n      selectedUserId: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const { selectedTab, users, selectedUserId, loading } = this.state;\r\n\r\n    const selectedUser = users.find(user => user.id === selectedUserId);\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        {loading && <CircularProgress className={classes.loading} />}\r\n        {/* <Button className={styles.backButton} onClick={() => { history.push(\"/\"); }} variant=\"contained\" size=\"large\" color=\"primary\">Zurück</Button> */}\r\n\r\n        <Tabs className={styles.tabs} value={selectedTab} onChange={this.handleTabSwitch} variant=\"fullWidth\">\r\n          <Tab label=\"Tipp Ergebnisse\" />\r\n          <Tab label=\"Rangliste\" />\r\n          <Tab label=\"Statistiken\" />\r\n        </Tabs>\r\n\r\n        {selectedTab === 0 && (\r\n          <div className={styles.resultsContainer}>\r\n            <FormControl className={styles.selectWrap}>\r\n              <InputLabel htmlFor=\"tipper\">Person</InputLabel>\r\n              <Select\r\n                variant=\"filled\"\r\n                value={selectedUserId || \"\"}\r\n                onChange={this.handleUserChange}\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  Person auswählen\r\n                </MenuItem>\r\n                {users.map(user => {\r\n                  return (\r\n                    <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {!!selectedUser && (\r\n              <UserResults\r\n                name={selectedUser.name}\r\n                characters={selectedUser.characters}\r\n                bonus={selectedUser.bonus}\r\n                answers={Answers}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {selectedTab === 1 && (\r\n          <Ranking \r\n            users={users}\r\n            answers={Answers}\r\n          />\r\n        )}\r\n\r\n        {selectedTab === 2 && (\r\n          <Statistics \r\n            users={users}\r\n            answers={Answers}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Results;","import React from 'react';\r\n\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from '../components/Home/Home';\r\nimport Results from '../components/Results/Results';\r\n\r\nclass AppRouter extends React.PureComponent {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Results} />\r\n          <Route path=\"/results\" component={Results} />\r\n          <Redirect path=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport AppRouter from './routing/Router';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nclass App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Typography component=\"h1\" variant=\"h2\" gutterBottom>GoT Tipp</Typography>\r\n        <AppRouter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backButton\":\"Results_backButton__1P8Pk\",\"tabs\":\"Results_tabs__1HyRu\",\"resultsContainer\":\"Results_resultsContainer__pHuB-\",\"selectWrap\":\"Results_selectWrap__OIiHN\",\"loading\":\"Results_loading__upmga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Ranking_users__20ePd\",\"user\":\"Ranking_user__4mtO-\",\"colorRotate\":\"Ranking_colorRotate__3uEuy\",\"position\":\"Ranking_position__bwAEC\",\"name\":\"Ranking_name__16NLB\",\"winner\":\"Ranking_winner__W7HDM\",\"points\":\"Ranking_points__HBiej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SubmitContainer_container__2UGlg\",\"button\":\"SubmitContainer_button__2Eo__\",\"block\":\"SubmitContainer_block__ShfF7\",\"input\":\"SubmitContainer_input__d5edq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BonusContainer_container__352JQ\",\"block\":\"BonusContainer_block__fknUe\",\"input\":\"BonusContainer_input__3OlWS\"};"],"sourceRoot":""}