{"version":3,"sources":["components/Home/Home.module.css","components/Results/UserResults/UserResults.module.css","components/Results/Results.module.css","firebase.js","components/SubmitContainer/SubmitContainer.jsx","components/BonusContainer/BonusContainer.jsx","components/CharacterContainer/CharacterContainer.jsx","components/Home/Home.jsx","components/Results/UserResults/UserResults.jsx","components/Results/Results.jsx","routing/Router.jsx","App.jsx","serviceWorker.js","index.js","components/SubmitContainer/SubmitContainer.module.css","components/BonusContainer/BonusContainer.module.css","components/CharacterContainer/CharacterContainer.module.css"],"names":["module","exports","resultsButton","userName","characters","character","left","characterName","userAnswer","characterStatus","correct","wrong","results","points","totalWrap","totalPoints","backButton","tabs","resultsContainer","selectWrap","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","React","memo","_ref","onSubmit","_useState","useState","_useState2","Object","slicedToArray","name","setName","react_default","a","createElement","className","styles","container","index_es","variant","gutterBottom","block","elevation","inputLabel","input","placeholder","onChange","event","target","value","button","color","disabled","onClick","items","map","bonusItem","index","key","question","radio","radioGroup","row","concat","answer","control","label","onRadioChange","onCheckboxChange","component","dies","checked","whiteWalker","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toConsumableArray","Data","bonus","handleResultsClick","bind","assertThisInitialized","handleNameChange","handleSubmit","handleRadioChange","handleCheckboxChange","handleBonusChange","history","push","updatedCharacters","objectSpread","setState","updatedBonus","_this$state","console","log","user","database","ref","_this$state2","home","size","components_CharacterContainer_CharacterContainer","components_BonusContainer_BonusContainer","components_SubmitContainer_SubmitContainer","PureComponent","answers","correctAnswers","_classNames","_classNames2","characterDead","realAnswer","answerCorrect","characterClasses","classNames","defineProperty","alive","dead","statusClasses","characterText","Results","selectedTab","selectedUserId","users","handleTabSwitch","handleUserChange","_this2","on","snapshot","val","newUsers","itemKey","id","selectedUser","find","htmlFor","Results_UserResults_UserResults","Answers","rankings","AppRouter","react_router_dom","react_router","path","exact","App","Router","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","title"],"mappings":"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","file":"static/js/main.0b7648d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsButton\":\"Home_resultsButton__2rlk8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userName\":\"UserResults_userName__1KsTo\",\"characters\":\"UserResults_characters__2Ki_Y\",\"character\":\"UserResults_character__3Pw15\",\"left\":\"UserResults_left__FuyqM\",\"characterName\":\"UserResults_characterName__1VeuC\",\"userAnswer\":\"UserResults_userAnswer__si-Jr\",\"characterStatus\":\"UserResults_characterStatus__1yq8I\",\"correct\":\"UserResults_correct__vBjUh\",\"wrong\":\"UserResults_wrong__1WJws\",\"results\":\"UserResults_results__K4PZM\",\"points\":\"UserResults_points__2mD3D\",\"totalWrap\":\"UserResults_totalWrap__36NXZ\",\"totalPoints\":\"UserResults_totalPoints__3QAfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backButton\":\"Results_backButton__1P8Pk\",\"tabs\":\"Results_tabs__1HyRu\",\"resultsContainer\":\"Results_resultsContainer__pHuB-\",\"selectWrap\":\"Results_selectWrap__OIiHN\"};","import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBTwiQsaaXD6gKmAnLADdcony3qjTbAtXE\",\r\n  authDomain: \"got-tip.firebaseapp.com\",\r\n  databaseURL: \"https://got-tip.firebaseio.com\",\r\n  projectId: \"got-tip\",\r\n  storageBucket: \"got-tip.appspot.com\",\r\n  messagingSenderId: \"476735537271\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React, { useState } from 'react';\r\n\r\nimport styles from './SubmitContainer.module.css';\r\nimport { Input, Button, Typography, Paper } from '@material-ui/core';\r\n\r\nconst SubmitContainer = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleSubmit() {\r\n    onSubmit(name);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h4\" gutterBottom>Antworten einreichen</Typography>\r\n      <Paper className={styles.block} elevation={1}>\r\n        <Typography className={styles.inputLabel} variant=\"h6\" gutterBottom>Dein Name</Typography>\r\n        <Input\r\n          className={styles.input}\r\n          placeholder=\"Name eingeben\"\r\n          onChange={(event) => { setName(event.target.value) }}\r\n        />\r\n        <Button\r\n          className={styles.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={!name}\r\n          onClick={handleSubmit}\r\n        >\r\n          Einreichen\r\n    </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SubmitContainer);","import React from 'react';\r\n\r\nimport styles from './BonusContainer.module.css';\r\nimport { Input, RadioGroup, FormControlLabel, Radio, Typography, Paper } from '@material-ui/core';\r\n\r\nconst BonusContainer = ({ items, onChange }) => {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h4\" gutterBottom>Bonus Fragen</Typography>\r\n      {items.map((bonusItem, index) => {\r\n        return (\r\n          <Paper key={bonusItem.question} className={styles.block} elevation={1}>\r\n            <Typography className={styles.inputLabel} variant=\"h6\" gutterBottom>\r\n              {bonusItem.question} ({bonusItem.points} Extrapunkt{bonusItem.points > 1 && 'e'})\r\n            </Typography>\r\n            {bonusItem.radio ? (\r\n              <RadioGroup\r\n                className={styles.radioGroup}\r\n                row={true}\r\n                name={`${bonusItem.question}-radios`}\r\n                value={bonusItem.answer}\r\n                onChange={(event) => { onChange(index, event.target.value) }}\r\n              >\r\n                <FormControlLabel value={'yes'} control={<Radio />} label=\"Ja\" />\r\n                <FormControlLabel value={'no'} control={<Radio />} label=\"Nein\" />\r\n              </RadioGroup>\r\n            ) : (\r\n                <Input\r\n                  className={styles.input}\r\n                  name={`${bonusItem.question}-input`}\r\n                  placeholder=\"Antwort eingeben\"\r\n                  value={bonusItem.answer}\r\n                  onChange={(event) => { onChange(index, event.target.value) }}\r\n                />\r\n              )}\r\n          </Paper>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(BonusContainer);","import React from 'react';\r\n\r\nimport styles from './CharacterContainer.module.css';\r\nimport { Paper, Typography, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@material-ui/core';\r\n\r\nconst CharacterContainer = ({ items, onRadioChange, onCheckboxChange }) => {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h4\" gutterBottom>Charaktere</Typography>\r\n      <ul className={styles.characters}>\r\n        {items.map(character => {\r\n          return (\r\n            <Paper key={character.name} component={'li'} className={styles.character} elevation={1}>\r\n              <Typography className={styles.inputLabel} variant=\"h6\" gutterBottom>{character.name}</Typography>\r\n              <FormGroup row>\r\n                <RadioGroup\r\n                  className={styles.radioGroup}\r\n                  row={true}\r\n                  name={`${character.name}-radios`}\r\n                  value={character.dies}\r\n                  onChange={(event) => { onRadioChange(character.name, event.target.value) }}\r\n                >\r\n                  <FormControlLabel value={'no'} control={<Radio />} label=\"Überlebt\" />\r\n                  <FormControlLabel value={'yes'} control={<Radio />} label=\"Stirbt\" />\r\n                </RadioGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={character.whiteWalker}\r\n                      onChange={(event) => { onCheckboxChange(character.name, event.target.checked) }}\r\n                      disabled={character.dies !== 'yes'}\r\n                    />\r\n                  }\r\n                  label=\"Kehrt als White-Walker zurück\"\r\n                />\r\n              </FormGroup>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CharacterContainer);","import React from 'react';\r\n\r\nimport styles from './Home.module.css';\r\n\r\nimport Data from '../../data/Data.json';\r\nimport firebase from '../../firebase';\r\n\r\nimport SubmitContainer from '../SubmitContainer/SubmitContainer';\r\nimport BonusContainer from '../BonusContainer/BonusContainer';\r\nimport CharacterContainer from '../CharacterContainer/CharacterContainer';\r\nimport { Button, Typography } from '@material-ui/core';\r\n\r\nclass Home extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      characters: [...Data.characters],\r\n      bonus: [...Data.bonus]\r\n    };\r\n\r\n    this.handleResultsClick = this.handleResultsClick.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleRadioChange = this.handleRadioChange.bind(this);\r\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    this.handleBonusChange = this.handleBonusChange.bind(this);\r\n  }\r\n\r\n  handleResultsClick() {\r\n    const { history } = this.props;\r\n\r\n    history.push('/results');\r\n  }\r\n\r\n  handleRadioChange(name, dies) {\r\n    const { characters } = this.state;\r\n\r\n    const updatedCharacters = characters.map(character => {\r\n      if (character.name === name) {\r\n        return {\r\n          ...character,\r\n          dies: dies,\r\n          whiteWalker: dies === 'yes' ? false : character.whiteWalker\r\n        }\r\n      }\r\n\r\n      return character;\r\n    });\r\n\r\n    this.setState({\r\n      characters: updatedCharacters\r\n    });\r\n  }\r\n\r\n  handleBonusChange(index, value) {\r\n    const { bonus } = this.state;\r\n\r\n    const updatedBonus = [...bonus];\r\n\r\n    updatedBonus[index].answer = value;\r\n\r\n    this.setState({\r\n      bonus: updatedBonus\r\n    });\r\n  }\r\n\r\n  handleCheckboxChange(name, checked) {\r\n    const { characters } = this.state;\r\n\r\n    const updatedCharacters = characters.map(character => {\r\n      if (character.name === name) {\r\n        return {\r\n          ...character,\r\n          whiteWalker: checked\r\n        }\r\n      }\r\n\r\n      return character;\r\n    });\r\n\r\n    this.setState({\r\n      characters: updatedCharacters\r\n    });\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(name) {\r\n    const { characters, bonus } = this.state;\r\n\r\n    console.log({\r\n      name: name,\r\n      characters: characters,\r\n      bonus: bonus\r\n    });\r\n\r\n    const itemsRef = firebase.database().ref('users');\r\n\r\n    const user = {\r\n      name: name,\r\n      characters: characters,\r\n      bonus: bonus\r\n    }\r\n\r\n    itemsRef.push(user);\r\n  }\r\n\r\n  render() {\r\n    const { characters, bonus } = this.state;\r\n\r\n    return (\r\n      <div className={styles.home}>\r\n        <Button className={styles.resultsButton} onClick={this.handleResultsClick} variant=\"contained\" size=\"large\" color=\"primary\">Ergebnisse</Button>\r\n\r\n        <CharacterContainer \r\n          items={characters}\r\n          onRadioChange={this.handleRadioChange}\r\n          onCheckboxChange={this.handleCheckboxChange}\r\n        />\r\n\r\n        <BonusContainer \r\n          items={bonus}\r\n          onChange={this.handleBonusChange}\r\n        />\r\n\r\n        <SubmitContainer\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './UserResults.module.css';\r\n\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\nconst UserResults = ({ name, characters, answers }) => {\r\n\r\n  let correctAnswers = 0;\r\n\r\n  return (\r\n    <div className={styles.results}>\r\n      <Typography variant=\"h5\" gutterBottom><span className={styles.userName}>{name}</span> hat getippt, dass</Typography>\r\n\r\n      <ul className={styles.characters}>\r\n        {characters.map((character, index) => {\r\n          const characterDead = character.dies === 'yes';\r\n          const realAnswer = answers.characters[index].dies;\r\n          let answerCorrect = character.dies === realAnswer || !realAnswer;\r\n\r\n          const characterClasses = classNames({\r\n            [styles.character]: true,\r\n            [styles.alive]: !characterDead,\r\n            [styles.dead]: characterDead\r\n          });\r\n\r\n          const statusClasses = classNames({\r\n            [styles.characterStatus]: true,\r\n            [styles.correct]: answerCorrect,\r\n            [styles.wrong]: !answerCorrect\r\n          });\r\n\r\n          let characterText = 'überlebt';\r\n\r\n          if (characterDead) {\r\n            characterText = 'stirbt';\r\n          }\r\n\r\n          let points = '0'\r\n\r\n          if (answerCorrect) {\r\n            points = '+ 1';\r\n            correctAnswers += 1;\r\n          } else {\r\n            points = '- 1'\r\n            correctAnswers -= 1;\r\n          }\r\n\r\n          return (\r\n            <Paper key={character.name} component={'li'} className={characterClasses} elevation={1}>\r\n              <div className={styles.left}>\r\n                <Typography className={styles.characterName} variant=\"h6\">\r\n                  {character.name}\r\n                  <span className={styles.userAnswer}> {characterText}</span>\r\n                </Typography>\r\n                <Typography className={statusClasses} variant=\"overline\">\r\n                  {character.name} {characterDead ? 'ist tot' : 'lebt'}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={styles.points}>\r\n                <Typography className={statusClasses} variant=\"button\">\r\n                  {points}\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className={styles.totalWrap}>\r\n        <Typography className={styles.totalPoints} variant=\"h5\">{correctAnswers} Punkte</Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(UserResults);","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport firebase from '../../firebase';\r\n\r\nimport styles from './Results.module.css';\r\n\r\nimport Answers from '../../data/Answers.json';\r\nimport { Paper, Typography, Button, Tabs, Tab, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport classes from './Results.module.css';\r\nimport UserResults from './UserResults/UserResults';\r\n\r\nclass Results extends React.PureComponent {\r\n\r\n  state = {\r\n    selectedTab: 0,\r\n    selectedUserId: null,\r\n    users: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const users = firebase.database().ref('users');\r\n\r\n    users.on('value', (snapshot) => {\r\n      let items = snapshot.val();\r\n      let newUsers = [];\r\n\r\n      for (let itemKey in items) {\r\n        newUsers.push({\r\n          id: itemKey,\r\n          ...items[itemKey]\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        users: newUsers,\r\n        selectedUserId: newUsers[0].id\r\n      });\r\n    });\r\n  }\r\n\r\n  handleTabSwitch = (event, value) => {\r\n    this.setState({\r\n      selectedTab: value\r\n    });\r\n  }\r\n\r\n  handleUserChange = (event) => {\r\n    this.setState({\r\n      selectedUserId: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const { selectedTab, users, selectedUserId } = this.state;\r\n\r\n    const selectedUser = users.find(user => user.id === selectedUserId);\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Button className={styles.backButton} onClick={() => { history.push(\"/\"); }} variant=\"contained\" size=\"large\" color=\"primary\">Zurück</Button>\r\n\r\n        <Tabs className={styles.tabs} value={selectedTab} onChange={this.handleTabSwitch} variant=\"fullWidth\">\r\n          <Tab label=\"Tipp Ergebnisse\" />\r\n          <Tab label=\"Rangliste\" />\r\n        </Tabs>\r\n\r\n        {selectedTab === 0 && (\r\n          <div className={styles.resultsContainer}>\r\n            <FormControl className={styles.selectWrap}>\r\n              <InputLabel htmlFor=\"tipper\">Tipper</InputLabel>\r\n              <Select\r\n                variant=\"filled\"\r\n                value={selectedUserId || \"\"}\r\n                onChange={this.handleUserChange}\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  Tipper auswählen\r\n                </MenuItem>\r\n                {users.map(user => {\r\n                  return (\r\n                    <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {!!selectedUser && (\r\n              <UserResults\r\n                name={selectedUser.name}\r\n                characters={selectedUser.characters}\r\n                answers={Answers}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {selectedTab === 1 && (\r\n          <div className={styles.rankings}>\r\n            RANKINGS\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Results;","import React from 'react';\r\n\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from '../components/Home/Home';\r\nimport Results from '../components/Results/Results';\r\n\r\nclass AppRouter extends React.PureComponent {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/results\" component={Results} />\r\n          <Redirect path=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport AppRouter from './routing/Router';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nclass App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Typography component=\"h1\" variant=\"h2\" gutterBottom>GoT Tipp</Typography>\r\n        <AppRouter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SubmitContainer_container__2UGlg\",\"button\":\"SubmitContainer_button__2Eo__\",\"block\":\"SubmitContainer_block__ShfF7\",\"input\":\"SubmitContainer_input__d5edq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BonusContainer_container__352JQ\",\"block\":\"BonusContainer_block__fknUe\",\"input\":\"BonusContainer_input__3OlWS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CharacterContainer_container__16e4A\",\"title\":\"CharacterContainer_title__3HxzE\",\"characters\":\"CharacterContainer_characters__78RdB\",\"character\":\"CharacterContainer_character__3kS_-\",\"inputLabel\":\"CharacterContainer_inputLabel__27cqz\",\"block\":\"CharacterContainer_block__6z7Ee\",\"radioGroup\":\"CharacterContainer_radioGroup__YVXrl\",\"input\":\"CharacterContainer_input__16H9e\"};"],"sourceRoot":""}